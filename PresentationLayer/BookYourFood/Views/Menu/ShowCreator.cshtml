@using ReservationDomain.Model
@using Utility
@model BookYourFood.Models.CreatorViewModel

@{
    ViewBag.Title = "ShowCreator";
}

<div class="creator-container">
    <div class="page-header">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="panel panel-primary">
        <div class="panel-heading">
            Choose meal, and modify it!
        </div>

        <div class="panel-body">
            <div class="row">
                <div class="panel col-md-12">
                    @(Html.Kendo().DropDownList()
                      .Name("mealToEdit")
                      .DataTextField("Name")
                      .DataValueField("Id")
                      .BindTo(Model.Meals)
                      .Events(events => events.Change("BYF.ShowCreator.mealChange"))
                      .OptionLabel("Meals")
                      .HtmlAttributes(new { style = "width:100%;" })
                    )
                </div>
                <div class="panel col-md-12">
                    @(Html.Kendo().MultiSelect()
                      .Name("ingridents")
                      .Placeholder("Select ingredients...")
                      .DataTextField("Name")
                      .DataSource(config => config
                          .Read("GetIngredients", "Ingredient")
                          .Custom()
                          .Group(g => g
                              .Add("IngredientImportanceAsString", typeof(string))))
                      .DataValueField("Id")
                      .ItemTemplate("Name: #: data.Name #" +
                                    ", Type: #: data.IngredientTypeAsString #")
                    )
                </div>
                <div class="panel col-md-12">
                    <div class="form-group">
                        <label>Comments:</label>
                        <textarea class="form-control" row="5" data-bind="value: customMealComment"></textarea>
                    </div>
                </div>
                <div class="col-md-12">
                    <button class="btn btn-primary" data-bind="click: createMeal">Add meal</button>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm("Index", "Menu"))
    {
        <div id="customMeals" data-bind="visible: isVisible" class="panel panel-primary">
            <div class="panel-heading">Custom meals</div>
            <ul class="list-group">

            </ul>
        </div>
        
        <input hidden name="id" value="@ViewBag.Id"/>
        <div class="panel panel-primary">
            <div class="panel-heading">Main Course</div>
            <ul class="list-group">
                @for (var i = 0; i < Model.Meals.Count; i++)
                {
                    <li class="list-group-item">
                        <h3>@Model.Meals[i].Name</h3>
                        <h4>@Model.Meals[i].Description</h4>
                        <input hidden value="@Model.Meals[i].Id" name='meals[@i].Id' />
                        Price: @Model.Meals[i].Price
                        @Html.Kendo().NumericTextBox().Name("meals[" + i + "].Number").Decimals(0).Min(0).Step(1).Value(0)
                    </li>
                }
            </ul>
        </div>

        <div class="panel panel-primary">
            <div class="panel-heading">Drinks</div>
            <ul class="list-group">
                @for (var i = 0; i < Model.Drinks.Count; i++)
                {
                    <li class="list-group-item">
                        <h4>@Model.Drinks[i].Name</h4>
                        <input hidden value="@Model.Drinks[i].Id" name='drinks[@i].Id' />
                        Price: @Model.Drinks[i].Price
                        @Html.Kendo().NumericTextBox().Name("drinks[" + i + "].Number").Decimals(0).Min(0).Step(1).Value(0)
                    </li>
                }
            </ul>
        </div>

        <input type="submit" class="btn btn-lg btn-primary" value="Done!" />
    }
</div>


@(Html.CreateJsViewModel()
    .Container(".creator-container")
      .ViewModelName("ShowCreator"))
